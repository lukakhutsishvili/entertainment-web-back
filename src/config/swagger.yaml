openapi: 3.0.0
info:
  title: entertainment-web
  description: API
  version: 0.1.9

servers:
  - url: https://entertainment-web-back-production.up.railway.app/api
    description: Production server
  - url: http://localhost:3000/api
    description: Local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /register:
    post:
      tags:
        - REGISTER
      summary: Register a new user
      requestBody:
        description: User registration request
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                bookMarkedMovies:
                  type: array
                  items:
                    type: string
      responses:
        "201":
          description: User registered successfully

  /login:
    post:
      tags:
        - LOGIN
      summary: Log in as an existing user
      requestBody:
        description: User login
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                bookMarkedMovies:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: User logged in successfully

  /sendBookmarkedMovies:
    post:
      tags:
        - Bookmarked Movies
      summary: Create a new bookmarked movies entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ID of the user
                movies:
                  type: string
                  description: ID of the movie
      responses:
        "200":
          description: OK

  /bookMarkedMovies/{id}:
    get:
      summary: "Endpoint to retrieve bookmarked movies for a user"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the user"
          required: true
          type: "string"
          example: "12345"
      responses:
        '200':
          description: "Success"
          schema:
            type: "array"
            items:
              type: "string"
            example: ["123", "456"]
        '404':
          description: "User not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "Error message"

  /movies:
    get:
      summary: Get all movies
      tags:
        - Movies
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/Movie"
        "404":
          description: No movies found

definitions:
  Movie:
    type: object
    properties:
      title:
        type: string
      thumbnail:
        type: object
        properties:
          trending:
            type: object
            properties:
              small:
                type: string
              large:
                type: string
          regular:
            type: object
            properties:
              small:
                type: string
              medium:
                type: string
              large:
                type: string
      year:
        type: integer
      category:
        type: string
      rating:
        type: string
      isBookmarked:
        type: boolean
      isTrending:
        type: boolean


